{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gouri\\\\potfolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from 'react'; // Import useState and useEffect hooks\nimport NavigationBar from \"./components/NavBar/NavigationBar.js\";\nimport Intro from \"./components/Intro/Intro.js\";\nimport Links from \"./components/Links/Links.js\";\nimport Projects from './components/MyProjects/Projects.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Create a state to track the current theme\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n  // Create a ref for the projects section\n  const projectsRef = useRef(null);\n\n  // Function to toggle theme\n  const toggleTheme = () => {\n    console.log(\"Toggling theme...\"); // Debugging log\n    setIsDarkTheme(prevTheme => !prevTheme); // Toggle state\n\n    // Toggle 'dark-theme' class on the body\n    document.body.classList.toggle('dark-theme');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n        isDarkTheme: isDarkTheme,\n        toggleTheme: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Intro, {\n              isDarkTheme: isDarkTheme,\n              toggleTheme: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Links, {\n              isDarkTheme: isDarkTheme,\n              toggleTheme: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects\",\n          element: /*#__PURE__*/_jsxDEV(Projects, {\n            isDarkTheme: isDarkTheme,\n            toggleTheme: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sHtDIX3B+hg6i9Ak602o89MSXEA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useState","useEffect","useRef","NavigationBar","Intro","Links","Projects","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDarkTheme","setIsDarkTheme","projectsRef","toggleTheme","console","log","prevTheme","document","body","classList","toggle","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/gouri/potfolio/src/App.js"],"sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useState, useEffect ,useRef} from 'react';  // Import useState and useEffect hooks\nimport NavigationBar from \"./components/NavBar/NavigationBar.js\";\nimport Intro from \"./components/Intro/Intro.js\";\nimport Links from \"./components/Links/Links.js\";\nimport Projects from './components/MyProjects/Projects.js';\n\n\nfunction App() {\n  // Create a state to track the current theme\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n  // Create a ref for the projects section\n  const projectsRef = useRef(null);\n\n  // Function to toggle theme\n  const toggleTheme = () => {\n    console.log(\"Toggling theme...\"); // Debugging log\n    setIsDarkTheme((prevTheme) => !prevTheme); // Toggle state\n\n    // Toggle 'dark-theme' class on the body\n    document.body.classList.toggle('dark-theme');\n  };\n\n\n  return (\n    <Router>\n<div className=\"App\">\n      <NavigationBar isDarkTheme={isDarkTheme} toggleTheme={toggleTheme}/>\n      <Routes>\n        <Route\n          path=\"/\"\n          element ={\n            <>\n            <Intro isDarkTheme={isDarkTheme} toggleTheme={toggleTheme}/>\n            <Links isDarkTheme={isDarkTheme} toggleTheme={toggleTheme}/>\n            </>\n          }\n        />\n        <Route\n        path=\"/projects\"\n        element={<Projects isDarkTheme={isDarkTheme} toggleTheme={toggleTheme}  />}\n        />\n      </Routes>\n      \n      {/* <Projects isDarkTheme={isDarkTheme} toggleTheme={toggleTheme} ref={projectsRef} /> */}\n    </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO,CAAC,CAAE;AACrD,OAAOC,aAAa,MAAM,sCAAsC;AAChE,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,QAAQ,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMe,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAClCJ,cAAc,CAAEK,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;;IAE3C;IACAC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;EAC9C,CAAC;EAGD,oBACEf,OAAA,CAACX,MAAM;IAAA2B,QAAA,eACXhB,OAAA;MAAKiB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACdhB,OAAA,CAACL,aAAa;QAACU,WAAW,EAAEA,WAAY;QAACG,WAAW,EAAEA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpErB,OAAA,CAACT,MAAM;QAAAyB,QAAA,gBACLhB,OAAA,CAACV,KAAK;UACJgC,IAAI,EAAC,GAAG;UACRC,OAAO,eACLvB,OAAA,CAAAE,SAAA;YAAAc,QAAA,gBACAhB,OAAA,CAACJ,KAAK;cAACS,WAAW,EAAEA,WAAY;cAACG,WAAW,EAAEA;YAAY;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eAC5DrB,OAAA,CAACH,KAAK;cAACQ,WAAW,EAAEA,WAAY;cAACG,WAAW,EAAEA;YAAY;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA,eAC1D;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFrB,OAAA,CAACV,KAAK;UACNgC,IAAI,EAAC,WAAW;UAChBC,OAAO,eAAEvB,OAAA,CAACF,QAAQ;YAACO,WAAW,EAAEA,WAAY;YAACG,WAAW,EAAEA;UAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGb;AAACjB,EAAA,CA1CQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}